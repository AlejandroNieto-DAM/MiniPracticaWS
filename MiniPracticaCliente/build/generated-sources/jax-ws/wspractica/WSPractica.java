
package wspractica;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSPractica", targetNamespace = "http://WSPractica/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSPractica {


    /**
     * 
     * @param passwd
     * @param login
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "loginAcces", targetNamespace = "http://WSPractica/", className = "wspractica.LoginAcces")
    @ResponseWrapper(localName = "loginAccesResponse", targetNamespace = "http://WSPractica/", className = "wspractica.LoginAccesResponse")
    @Action(input = "http://WSPractica/WSPractica/loginAccesRequest", output = "http://WSPractica/WSPractica/loginAccesResponse")
    public Boolean loginAcces(
        @WebParam(name = "login", targetNamespace = "")
        String login,
        @WebParam(name = "passwd", targetNamespace = "")
        String passwd);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://WSPractica/", className = "wspractica.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://WSPractica/", className = "wspractica.HelloResponse")
    @Action(input = "http://WSPractica/WSPractica/helloRequest", output = "http://WSPractica/WSPractica/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param texto
     * @param asunto
     * @param from
     * @param to
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendEmail", targetNamespace = "http://WSPractica/", className = "wspractica.SendEmail")
    @ResponseWrapper(localName = "sendEmailResponse", targetNamespace = "http://WSPractica/", className = "wspractica.SendEmailResponse")
    @Action(input = "http://WSPractica/WSPractica/sendEmailRequest", output = "http://WSPractica/WSPractica/sendEmailResponse")
    public String sendEmail(
        @WebParam(name = "from", targetNamespace = "")
        String from,
        @WebParam(name = "to", targetNamespace = "")
        String to,
        @WebParam(name = "asunto", targetNamespace = "")
        String asunto,
        @WebParam(name = "texto", targetNamespace = "")
        String texto);

    /**
     * 
     * @param segundoNumero
     * @param primerNumero
     * @param operacion
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calculadora", targetNamespace = "http://WSPractica/", className = "wspractica.Calculadora")
    @ResponseWrapper(localName = "calculadoraResponse", targetNamespace = "http://WSPractica/", className = "wspractica.CalculadoraResponse")
    @Action(input = "http://WSPractica/WSPractica/calculadoraRequest", output = "http://WSPractica/WSPractica/calculadoraResponse")
    public String calculadora(
        @WebParam(name = "primerNumero", targetNamespace = "")
        int primerNumero,
        @WebParam(name = "segundoNumero", targetNamespace = "")
        int segundoNumero,
        @WebParam(name = "operacion", targetNamespace = "")
        String operacion);

}
